// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

enum UserRole {
  ADMIN
  USER
}

enum TransactionType {
  income
  expense
}

enum TransactionStatus {
  pending 
  completed 
  failed 
  cancelled  
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DATABASE_URL_UNPOOLED")
}

// USERS MODELS

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  firstName     String?
  lastName      String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  password      String?
  role          UserRole @default(USER)
  image         String?
  accounts      Account[]

  @@map("users")
}

// TRANSACTION MODELS

model Transaction {
  id         String   @id @default(uuid())
  type       TransactionType
  status     TransactionStatus @default(pending)
  amount     Float
  date       DateTime
  note       String  
  category   Category @relation(fields: [categoryId], references: [categoryId])
  categoryId String

  @@index([categoryId])
  @@map("transactions")
}

model Category {
  categoryId       String  @id          
  categoryName     String
  type     TransactionType
  color    String
  transactions Transaction[]
  
  @@map("categories")
}


